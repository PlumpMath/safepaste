#!/usr/bin/env bash

set -eu

# TODO: proper option parsing

here="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

url=https://safepaste.org
url=http://localhost:3000

log()
{ printf ">>> %s\n" "$*"; }
log_start()
{ printf ">>> %s" "$*"; }
log_end()
{ printf "%s\n" "$*"; }

check_existence()
{
  set +e
  found=$(which "$1")
  exists=$?
  if [ ! "$exists" == "0" ];
  then
    log_end "$1 not found; please install it." 1>&2
    exit 1
  fi
  set -e
  printf $found
}

## Sanity-check
for p in openssl curl awk grep sed base64 head tail;
do
  export which_$p=$(check_existence "$p")
done

curl_error()
{
  log_end "error: $1"
  exit $2
}

cookies=$(mktemp)
check_status()
{
  set +e
    status=$($which_head -1 <<< "$1" | $which_awk '{print $2;}')
    case "$status" in
      '200')
        ;;
      '400')
        curl_error "bad request" $status
        ;;
      '410')
        curl_error "invalid paste id" $status
        ;;
      '413')
        curl_error "paste is too large" $status
        ;;
      '429')
        curl_error "you've been pasting a lot; try again later" $status
        ;;
      '503')
        curl_error "pasting is currently disabled" $status
        ;;
      *)
        curl_error "unknown" $status
        ;;
    esac
  set -e
}
curl_constants="-b $cookies -c $cookies -is"

login=$($which_curl $curl_constants "$url/api/login")
check_status "$login"
token=$($which_grep "X-CSRF-Token:" <<< "$login" \
          | $which_head -1 \
          | $which_sed 's/\r//g')
max_size=$($which_grep "max-size" <<< "$login" \
          | $which_grep -Po '\d+')

# TODO: read from options
expiry="day"

# TODO: read from stdin
data=$(echo "meow!" | $which_base64)

log "$token"
log "max_size: $max_size"
log "data: $data"
log "expiry: $expiry"

post=$($which_curl $curl_constants \
        -H "Content-Type: application/json" \
        -H "Accept: text/html,application/json" \
        -H "$token" \
        --data "{\"data\":\"$data\",\"expiry\":\"$expiry\"}" \
        "$url/api/new")
check_status "$post"
id=$($which_tail -1 <<< "$post" | $which_sed 's/.*"id":"\([a-f0-9]\+\)".*/\1/')
final_url="$url/$id#secret-key"
log "$final_url"

get=$($which_curl $curl_constants "$url/api/$id")
check_status "$get"
data=$($which_tail -1 <<< "$get" | $which_sed 's/.*"data":"\(\w\+\)".*/\1/')
burned=$($which_tail -1 <<< "$get" | $which_sed 's/.*"burned":\(true\|false\).*/\1/')
log "$($which_base64 -d <<< $data)"
log "$burned"
